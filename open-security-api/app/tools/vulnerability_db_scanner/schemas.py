from pydantic import BaseModel, Field
from typing import List, Optional, Dict, Any


class VulnDbScannerRequest(BaseModel):
    target: str = Field(..., description="Target software, version, or CVE ID to scan")
    scan_type: str = Field(
        default="software",
        description="Type of scan: software, cve, or comprehensive"
    )
    severity_filter: List[str] = Field(
        default=["critical", "high", "medium", "low"],
        description="Severity levels to include in results"
    )
    include_exploits: bool = Field(
        default=True,
        description="Include available exploit information"
    )
    max_results: int = Field(
        default=50,
        description="Maximum number of vulnerabilities to return"
    )


class VulnerabilityInfo(BaseModel):
    cve_id: str
    title: str
    description: str
    severity: str
    cvss_score: float
    published_date: str
    last_modified: str
    affected_products: List[str]
    references: List[str]
    exploit_available: bool
    exploit_info: Optional[Dict[str, Any]] = None


class VulnDbScannerResponse(BaseModel):
    target: str
    scan_type: str
    vulnerabilities_found: List[VulnerabilityInfo]
    total_vulnerabilities: int
    severity_breakdown: Dict[str, int]
    risk_assessment: Dict[str, Any]
    recommendations: List[str]
    scan_timestamp: str
    success: bool
    message: str
