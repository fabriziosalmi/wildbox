from pydantic import BaseModel, Field
from typing import List, Optional, Dict, Any, Union

class StaticMalwareAnalyzerInput(BaseModel):
    """Input schema for Static Malware Analyzer tool"""
    file_hash: Optional[str] = Field(None, description="File hash (MD5, SHA1, SHA256) for analysis")
    file_content: Optional[str] = Field(None, description="Base64 encoded file content for analysis")
    file_url: Optional[str] = Field(None, description="URL to download file for analysis")
    analysis_depth: str = Field(default="standard", description="Analysis depth (quick, standard, deep)")
    check_signatures: bool = Field(default=True, description="Check against malware signatures")
    check_behaviors: bool = Field(default=True, description="Analyze behavioral patterns")
    check_strings: bool = Field(default=True, description="Extract and analyze strings")
    check_entropy: bool = Field(default=True, description="Calculate entropy and detect packing")
    check_imports: bool = Field(default=True, description="Analyze import table")
    check_sections: bool = Field(default=True, description="Analyze PE sections")
    yara_rules: Optional[List[str]] = Field(default=None, description="Custom YARA rules to apply")

class MalwareSignature(BaseModel):
    signature_name: str
    signature_type: str  # YARA, Hash, Heuristic
    description: str
    severity: str  # Critical, High, Medium, Low
    confidence: float  # 0.0 to 1.0
    details: Dict[str, Any]

class SuspiciousBehavior(BaseModel):
    behavior_name: str
    category: str  # Network, File, Registry, Process, Crypto
    description: str
    risk_level: str  # Critical, High, Medium, Low
    indicators: List[str]
    mitre_technique: Optional[str] = None

class StringAnalysis(BaseModel):
    string_type: str  # URL, IP, Email, Registry, File, Command
    value: str
    context: str
    suspicious: bool
    confidence: float

class FileMetadata(BaseModel):
    file_size: int
    file_type: str
    file_extension: str
    creation_time: Optional[str] = None
    modification_time: Optional[str] = None
    pe_info: Optional[Dict[str, Any]] = None
    entropy: float
    packed: bool
    digital_signature: Optional[Dict[str, Any]] = None

class StaticMalwareAnalyzerOutput(BaseModel):
    """Output schema for Static Malware Analyzer tool"""
    file_hash: Optional[str]
    analysis_timestamp: str
    analysis_depth: str
    file_metadata: Optional[FileMetadata]
    malware_signatures: List[MalwareSignature]
    suspicious_behaviors: List[SuspiciousBehavior]
    string_analysis: List[StringAnalysis]
    threat_classification: str  # Clean, Suspicious, Malware, Unknown
    threat_family: Optional[str] = None
    threat_score: float  # 0-100, higher is more threatening
    risk_assessment: Dict[str, Any]
    yara_matches: List[str]
    av_detection_ratio: Optional[str] = None
    recommendations: List[str]
    execution_time: float

# Tool metadata

